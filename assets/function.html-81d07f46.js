import{_ as a,n,p as s,a0 as e}from"./framework-76e35361.js";const t={},i=e(`<h2 id="_1、function" tabindex="-1"><a class="header-anchor" href="#_1、function" aria-hidden="true">#</a> 1、function</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">aa</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、对象字面量定义" tabindex="-1"><a class="header-anchor" href="#_2、对象字面量定义" aria-hidden="true">#</a> 2、对象字面量定义</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、es6中的箭头函数" tabindex="-1"><a class="header-anchor" href="#_3、es6中的箭头函数" aria-hidden="true">#</a> 3、ES6中的箭头函数</h2><h3 id="_3-1-函数定义" tabindex="-1"><a class="header-anchor" href="#_3-1-函数定义" aria-hidden="true">#</a> 3.1. 函数定义</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// const obj = (参数列表) =&gt; {}</span>
<span class="token comment">//无参箭头函数</span>
<span class="token keyword">const</span> <span class="token function-variable function">obj</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-放入多个参数" tabindex="-1"><a class="header-anchor" href="#_3-2-放入多个参数" aria-hidden="true">#</a> 3.2. 放入多个参数</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-只有一个参数" tabindex="-1"><a class="header-anchor" href="#_3-3-只有一个参数" aria-hidden="true">#</a> 3.3. 只有一个参数</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">pow</span> <span class="token operator">=</span> <span class="token parameter">a</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> a <span class="token operator">*</span> a<span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-4-函数方法体内只有一行代码" tabindex="-1"><a class="header-anchor" href="#_3-4-函数方法体内只有一行代码" aria-hidden="true">#</a> 3.4. 函数方法体内只有一行代码</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-5-箭头函数中this的使用" tabindex="-1"><a class="header-anchor" href="#_3-5-箭头函数中this的使用" aria-hidden="true">#</a> 3.5. 箭头函数中this的使用</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// this是逐层向上查找，直到找到this的定义</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15),c=[i];function p(o,r){return n(),s("div",null,c)}const d=a(t,[["render",p],["__file","function.html.vue"]]);export{d as default};
