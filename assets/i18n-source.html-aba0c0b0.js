import{_ as e,L as o,n as p,p as c,M as a,a0 as l,Q as n,s as t}from"./framework-76e35361.js";const i={},u=l(`<h1 id="i18n源码解析" tabindex="-1"><a class="header-anchor" href="#i18n源码解析" aria-hidden="true">#</a> I18N源码解析</h1><h2 id="localechangeinterceptor拦截器" tabindex="-1"><a class="header-anchor" href="#localechangeinterceptor拦截器" aria-hidden="true">#</a> LocaleChangeInterceptor拦截器</h2><p><code>LocaleChangeInterceptor</code>拦截器是Spring拦截器<code>HandlerInterceptor</code>的一个实现，用来实现请求处理前根据接口参数修改语言环境，设置Locale解析器<code>LocaleResolver</code>。<code>HandlerInterceptor</code>的核心源码如下，核心功能是对Locale解析器<code>LocaleResolver</code>设置<code>Locale</code>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LocaleChangeInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerInterceptor</span> <span class="token punctuation">{</span>
  <span class="token comment">//省略部分</span>
  
  <span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">preHandle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">Object</span> handler<span class="token punctuation">)</span>
			<span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>

		<span class="token class-name">String</span> newLocale <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token function">getParamName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>newLocale <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">checkHttpMethod</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token class-name">LocaleResolver</span> localeResolver <span class="token operator">=</span> <span class="token class-name">RequestContextUtils</span><span class="token punctuation">.</span><span class="token function">getLocaleResolver</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>localeResolver <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span>
							<span class="token string">&quot;No LocaleResolver found: not in a DispatcherServlet request?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					localeResolver<span class="token punctuation">.</span><span class="token function">setLocale</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token function">parseLocaleValue</span><span class="token punctuation">(</span>newLocale<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isIgnoreInvalidLocale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span>logger<span class="token punctuation">.</span><span class="token function">isDebugEnabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Ignoring invalid locale value [&quot;</span> <span class="token operator">+</span> newLocale <span class="token operator">+</span> <span class="token string">&quot;]: &quot;</span> <span class="token operator">+</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
					<span class="token keyword">else</span> <span class="token punctuation">{</span>
						<span class="token keyword">throw</span> ex<span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// Proceed in any case.</span>
		<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
  
  <span class="token comment">//省略部分</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="localeresolver解析器" tabindex="-1"><a class="header-anchor" href="#localeresolver解析器" aria-hidden="true">#</a> <code>LocaleResolver</code>解析器</h2><p><code>LocaleResolver</code>解析器用来保存Locale，实现方式可以选择<code>Cookie</code>或<code>Session</code>。使用时只需要将对应的Bean给到Spring容器即可。</p><p>以<code>Cookie</code>为例，<code>CookieLocaleResolver</code>实现了<code>LocaleContextResolver</code>接口提供了设置Locale的方法如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLocale</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Locale</span> locale<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">setLocaleContext</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> <span class="token punctuation">(</span>locale <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">SimpleLocaleContext</span><span class="token punctuation">(</span>locale<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLocaleContext</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span>
			<span class="token annotation punctuation">@Nullable</span> <span class="token class-name">LocaleContext</span> localeContext<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> <span class="token string">&quot;HttpServletResponse is required for CookieLocaleResolver&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">Locale</span> locale <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token class-name">TimeZone</span> timeZone <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>localeContext <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			locale <span class="token operator">=</span> localeContext<span class="token punctuation">.</span><span class="token function">getLocale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>localeContext <span class="token keyword">instanceof</span> <span class="token class-name">TimeZoneAwareLocaleContext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				timeZone <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">TimeZoneAwareLocaleContext</span><span class="token punctuation">)</span> localeContext<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTimeZone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token function">addCookie</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span>
					<span class="token punctuation">(</span>locale <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token function">toLocaleValue</span><span class="token punctuation">(</span>locale<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>timeZone <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token char">&#39;/&#39;</span> <span class="token operator">+</span> timeZone<span class="token punctuation">.</span><span class="token function">getID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token function">removeCookie</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token constant">LOCALE_REQUEST_ATTRIBUTE_NAME</span><span class="token punctuation">,</span>
				<span class="token punctuation">(</span>locale <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> locale <span class="token operator">:</span> <span class="token function">determineDefaultLocale</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token constant">TIME_ZONE_REQUEST_ATTRIBUTE_NAME</span><span class="token punctuation">,</span>
				<span class="token punctuation">(</span>timeZone <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> timeZone <span class="token operator">:</span> <span class="token function">determineDefaultTimeZone</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从源码中可以看到，是将Locale存放到了Cookie中，使用时从Cookie中获取。Session实现方式相同，只不过是存放到了Session中。</p><h2 id="流程" tabindex="-1"><a class="header-anchor" href="#流程" aria-hidden="true">#</a> 流程</h2>`,10),k=n("h3",{id:"拦截器时序图",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#拦截器时序图","aria-hidden":"true"},"#"),t(" 拦截器时序图")],-1),r=n("h3",{id:"messagesource获取消息时序图",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#messagesource获取消息时序图","aria-hidden":"true"},"#"),t(" MessageSource获取消息时序图")],-1);function d(v,m){const s=o("Mermaid");return p(),c("div",null,[u,a(s,{id:"mermaid-26",code:"eJylVktP20AQPpNf4XsT9Y5QVB6tOLQSglY9b5wVWA12aq8pvQHl4ZAnTZSWV1SktkSVCIkqkYQE+DNeO/yLrr1O4rWdqBEXRHZmvm9m9ptZK/CjCkUeLghgVQbroSmgIklU12NQDnHcLI8kmXunQJkDCmeWqobWJMdLQEYCLySBiLjZZDIh8AAJkmj5vIcxfFsinmY1jW/zHucVKG8IPLQc9dYJPrwI9FoQlCRA/BqULf8ERKEpt3kRiPEElF9uQl61aOfXgCB6IF5LPEjAeUlEcBMtSom4XY7fYxkqUmLDZ5StrijIynMRoaSTxjI99fi+gYoCVuGKpMq0MgvT+n9OtfJkzCESa3czEo26OzfN4fzR49Z277ppNHasxru6avk+8/WEhPzcNQv7NISbicnPo9zMTFKWeMLopBqNEixRQpCTSJFu1HAAoFlqmNqN2ei8IkqAnyT5g2OiTATKFzQyOaOyizu3zDUMcoypQiLOmOw8R4CzFzUeWaZefuxhD3wsYY8Upj2/SVdezEEgGn+reO8XwWLNXMTKMhLQgt5DCZ9WmFyYTFicoAsxfrSNbI31w7WKmasb5Tbu5nHtRG+nqL2Xa+J8mZ7b7cB7Tf2uSI2kBiP929D+4OOqkS/o96fB/Z6slP9XA9bO8WUaZ8oBc9m/O0EUEGNQxqgiAIew1PeZc/3hHF99x1r97ZoMAVXcQCoKRH6ZxCHgkbAByBX5l9BEBQfNZlxy9t+YwpzNQ4axWyTJe+7+ut1rXJCChpvoySn1PceNYODGJfLsSwp3t8j1UmhKg1NZ82TXcbBPBpSALKHPSzKkoDZtIL5NPVqMRmrLOEsNVZ267F1kzE7RqJwxUxaIHfZXShrkmqze5fYQ+tsNeaPw6f3oBjn3SnKrfyFvH0F6PN6jLxwJ6r96rnXmUS4dXmoaNGq1r1C7RwFxoydB7+RcmtdbV24C79Ic8LgnYVI6dvBYwgkrigy76Vo73j4y7yq7Kp1VeKMZ29dubifEJmdf7SBaGs9oiQkK9/PxKYdxcyfjVpK7mCE11YwzQ7WMoRVGim7EUDoIdqzzt5AbzKJnCiUFucYwmCdoBGmClIp2C3/N4O4ObrW8XyL9aLLD1MQTtmxQGo8HWfOuprcO9VbaKB+w300kyPrUIskeaeR2cDFLPkxD/wCVup3y"}),k,a(s,{id:"mermaid-30",code:"eJydU8tO20AUXZOvmH0VdR9F3kAlKnWBQOp+cK/Aqplxx2PU7iKEUKIkBLUlpS1NSx8hqsiDdkEoofxM5to7foGBcQJ5EQnJG9/HOeeee8eHVwEwG+YcuiLoWmKGBpKzYG0ZRGJmgQrp2I5HmSRzju9Raa+CWAKx7oIcTItrHF8S6pN5Kb24ZtFEB0vnKXvhgnjyGuxAOpzNrlKHJQi5W/OM29QFnWEr8JRJEDZ4kouxVYvgc3dd6yVEfyM6SdKyyKOxpCmC+Spmf6uPNdXJqMN81DzB4w31czPc2VK5YvhpMy64iZD0snhskXSaep77ZkGAAbUsTTsW31BPmCUVy+9L0GxDPN4AxQScG5KJHPgjg19/xXOVNnC3pd4WzC+WT/HvLtYOVKeEe021U40a/8PzhsGaQhjvO0Wi7RNVKo9s4kFiVWvLSOu269du1D+ER9Vu+094fKYqeR2JmvWolonOj7D4vdv+Z4Bu7aLCBxN7Tt1gumvxanqy9TDjDOildUdyuKF78UXV9/oNjEsgXGeGWvUevp1isaEalXC7pY3Xll92CqbIYKhsawl8X58OZsuznL90pq0gOeGmo4v36nNl+LjO3mFl/95DTY48nR4W5jK4n+tjYe4wOijEiFf/vOKm"}),r,a(s,{id:"mermaid-34",code:"eJy9kz9Lw0AUwOfmU9wuxV1KoCqC4D/M4HxNHzGQXPRy6V4HUdHWQSuolEgHN+1UW1vwy+TOfgzPXApNmtpOQoYk797v3f3uPR9OAyAmbNrYotjVCjhgHgncClCtcIAps037BBOGDKA12wRUNlDUf+RXL9Gw8x3WNYSmV+2C72MLDC+gci320SH48ft6QKoOpMIyVT4TblHX0UoqvoZEOBA3bzueiR0YNz54syV6F6L+jkoVuqqjUskClqToumSlq/8SM0AFSX7mULYJA0qwE9Oww5B4CHnzTNx35XdhFp/dcD6fSgdODTa8KhzZ7NgLWJlagQuE+XGhHHAuN+1yevvpyDxoMUONho104vjrjj+15Wml9Wm8wahNrH26FzhKDTg+IPF8mbgpLKPmtSPatyoha2ahjj89b3nUxSzP9r/aXSh3TgPPyF3i5nj3XIGU1aj/me/CpIDZZOpUbNkSqSQRjvioya9b6v74oKdaZWEhINXcuSwmYy/lq56LT6P9AEAVzJY="})])}const f=e(i,[["render",d],["__file","i18n-source.html.vue"]]);export{f as default};
