import{_ as p,L as t,n as i,p as c,Q as s,s as n,M as e,a0 as o}from"./framework-76e35361.js";const r={},l=o('<h1 id="文档编辑" tabindex="-1"><a class="header-anchor" href="#文档编辑" aria-hidden="true">#</a> 文档编辑</h1><h2 id="typora" tabindex="-1"><a class="header-anchor" href="#typora" aria-hidden="true">#</a> Typora</h2><h2 id="插件" tabindex="-1"><a class="header-anchor" href="#插件" aria-hidden="true">#</a> 插件</h2><h3 id="picgo" tabindex="-1"><a class="header-anchor" href="#picgo" aria-hidden="true">#</a> PicGo</h3><p>Typora使用图片时，可以选择将图片上传到图床，推荐使用PicGo-Core上传。Typora设置如下：</p><p><img src="https://raw.githubusercontent.com/ying010/pic-repo/master/img/2023/02/24/20230224113149.png" alt="image-20230224113148838"></p>',6),u={href:"https://github.com/Molunerfinn/PicGo",target:"_blank",rel:"noopener noreferrer"},d={href:"https://picgo.github.io/PicGo-Core-Doc/zh/guide/",target:"_blank",rel:"noopener noreferrer"},m=o(`<h4 id="快速入门" tabindex="-1"><a class="header-anchor" href="#快速入门" aria-hidden="true">#</a> 快速入门</h4><p>::: tips</p><p>.md文档编辑器选择Typora，图片上传服务为PicGo-Core，图床使用Github。</p><p>:::</p><ol><li><p>打开Typora偏好设置-&gt;图像。将插入图片选项改为上传图片，上传服务选择PicGo-Core，点击<code>下载或更新</code>安装PicGo-Core。</p></li><li><p>使用<code>picgo set uploader</code>命令设置图床，可以根据自己需求选择合适的图床，这里以github举例。</p><p>:::tips</p><p>如果是Typora安装的PicGO-Core不是全局安装，需要到安装目录下操作，或者加环境变量。Typora的下载路径：</p><p><code>C:\\Users\\用户名\\AppData\\Roaming\\Typora\\picgo\\win64</code></p><p>:::</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span><span class="token number">9</span><span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>picgo <span class="token builtin class-name">set</span> uploader
? Choose a<span class="token punctuation">(</span>n<span class="token punctuation">)</span> uploader <span class="token punctuation">(</span>Use arrow keys<span class="token punctuation">)</span>
<span class="token operator">&gt;</span> aliyun
  tcyun
  smms
  github
  qiniu
  imgur
  upyun
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选择github，回车，根据提示依次设置github配置，分别是：仓库名、分支名、token、存储路径。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span><span class="token number">9</span><span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span>picgo <span class="token builtin class-name">set</span> uploader
? Choose a<span class="token punctuation">(</span>n<span class="token punctuation">)</span> uploader github
设定仓库名 格式：username/repo ying/pic-repo
设定分支名 例如：main master
? token: <span class="token punctuation">[</span>hidden<span class="token punctuation">]</span>
设定存储路径 例如：test/ img/
设定自定义域名 例如：https://test.com
<span class="token punctuation">[</span>PicGo SUCCESS<span class="token punctuation">]</span>: Configure config successfully<span class="token operator">!</span>
<span class="token punctuation">[</span>PicGo INFO<span class="token punctuation">]</span>: If you want to use this config, please run <span class="token string">&#39;picgo use uploader&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">注意</p><p>必须使用<code>picgo use uploader</code>选择设置的图床才能生效。</p></div><details class="custom-container details"><summary>github图床</summary><ul><li><p>在github新建一个仓库，设置为Public，在master分支下新建一个img文件夹，生成一个Token。</p></li><li><p>github登入成功后，输入<code>https://github.com/settings/tokens/new</code>可生成一个token，选择repo下所有选项。点击生成后会显示token，注意此token只显示一次，后面无法再次获取，需要保存下来。</p></li></ul><p><img src="https://raw.githubusercontent.com/ying010/pic-repo/master/img/2023/02/24/20230224120430.png" alt="image-20230224120429775"></p></details></li><li><p>测试上传：点击验证图片上传选项，显示成功表面设置成功。</p></li><li><p>默认上传的文件名是本地文件名，可能会导致名称冲突，可以安装一个重命名插件<code>super-prefix</code></p></li></ol><h4 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h4><ol><li><p>仅在Typora中使用时，可以点击上图中的<code>下载或更新</code>按钮安装</p></li><li><p>需要全局使用时可以使用npm或yarn安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装</span>
<span class="token function">yarn</span> global <span class="token function">add</span> picgo <span class="token comment"># 或者 npm install picgo -g</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h4><p>picgo 需要配置文件来启动。当未指定配置文件的时候，picgo 将会使用默认配置文件来启动。</p><p>picgo 的默认配置文件为<code>~/.picgo/config.json</code>。其中<code>~</code>为用户目录。不同系统的用户目录不太一样。</p><p>linux 和 macOS 为<code>~/.picgo/config.json</code>。</p><p>windows 为<code>C:\\Users\\系统用户名\\.picgo\\config.json</code>。</p><h5 id="生成配置文件" tabindex="-1"><a class="header-anchor" href="#生成配置文件" aria-hidden="true">#</a> 生成配置文件</h5><ul><li><p>自动生成</p><p>参阅快速入门。</p></li><li><p>手动生成</p><p>打开<code>config.json</code>配置文件，手动写入配置信息。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;picBed&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;current&quot;</span><span class="token operator">:</span> <span class="token string">&quot;smms&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;smms&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;picgoPlugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><code>picBed</code>是picgo 最主要的配置项，包括了当前上传图床，以及所有上传图床的配置。设置完图床后不需要修改。</p><p><code>picgoPlugins</code>放置插件名,主要用于判断插件是否被启用或者禁用。 <strong>picgo 自动生成，不需要配置！</strong></p><p><code>picgo-plugin-*</code>是插件配置</p><h4 id="插件-1" tabindex="-1"><a class="header-anchor" href="#插件-1" aria-hidden="true">#</a> 插件</h4><h5 id="安装-1" tabindex="-1"><a class="header-anchor" href="#安装-1" aria-hidden="true">#</a> 安装</h5><blockquote><p>该命令用于安装npm上的picgo的插件。picgo的插件名都是以<code>picgo-plugin-</code>开头的。在安装、卸载或者更新的时候，你只需要输入<code>name</code>值而不需要输入<code>picgo-plugin-</code>的前缀。可以一次性安装多个插件，用空格隔开即可。</p></blockquote><p>:::tips</p><p>PicGo会把插件安装在配置文件所在的目录下。默认配置文件在<code>~/.picgo/</code>下，所以插件会安装在<code>~/.picgo/node_modules/</code>下。</p><p>:::</p>`,23),g={href:"https://www.npmjs.com/search?q=picgo-plugin-",target:"_blank",rel:"noopener noreferrer"},k=s("code",null,"picgo-plugin-[name]",-1),h=o(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>picgo <span class="token function">install</span> <span class="token punctuation">[</span>name<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>来安装插件。你安装了之后，可以通过<code>picgo ch plugins</code>来选择开启或者禁用这个插件。</p>`,2),v={href:"https://github.com/PicGo/Awesome-PicGo",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/gclove/picgo-plugin-super-prefix#readme",target:"_blank",rel:"noopener noreferrer"},q=o(`<div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;picBed&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;uploader&quot;</span><span class="token operator">:</span> <span class="token string">&quot;github&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;github&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;repo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;username/reponame&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 仓库名，格式是 username/reponame</span>
      <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;token&quot;</span><span class="token punctuation">,</span> <span class="token comment">// github token</span>
      <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;img/&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 自定义存储路径，比如 img/</span>
      <span class="token property">&quot;customUrl&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 自定义域名，注意要加 http://或者 https://</span>
      <span class="token property">&quot;branch&quot;</span><span class="token operator">:</span> <span class="token string">&quot;master&quot;</span> <span class="token comment">// 分支名，默认是 main</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;transformer&quot;</span><span class="token operator">:</span> <span class="token string">&quot;path&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;picgoPlugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;picgo-plugin-super-prefix&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;picgo-plugin-super-prefix&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;prefixFormat&quot;</span><span class="token operator">:</span> <span class="token string">&quot;YYYY/MM/DD/&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;fileFormat&quot;</span><span class="token operator">:</span> <span class="token string">&quot;YYYYMMDDHHmmss&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function f(y,_){const a=t("ExternalLinkIcon");return i(),c("div",null,[l,s("p",null,[n("PicGo-Core是"),s("a",u,[n("PicGo"),e(a)]),n("2.0版本里将会预置的底层核心组件。它可以看做是一个简单的上传流程系统。可以使用命令行配置并使用，操作更为简洁比较适合当作插件配合其他地方使用。PicGo-Core"),s("a",d,[n("官方文档"),e(a)])]),m,s("p",null,[n("你可以通过npm的官方网站查找目前所有的picgo的"),s("a",g,[n("插件"),e(a)]),n("。picgo的插件命名规则为"),k,n("。然后再通过：")]),h,s("p",null,[n("可以在PicGo官方的"),s("a",v,[n("Awesome-PicGo"),e(a)]),n("里找到超棒的PicGo插件和应用了PicGo的应用或者项目~")]),s("p",null,[n("推荐使用"),s("a",b,[n("super-prefix"),e(a)]),n("插件，可以对文件上传的路径和上传的文件名进行自定义。安装插件之后，修改插件配置如下，可将上传路径以年月日分层，方便管理。")]),q])}const P=p(r,[["render",f],["__file","editor.html.vue"]]);export{P as default};
