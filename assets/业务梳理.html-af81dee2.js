import{_ as e,n as i,p as a,a0 as c}from"./framework-76e35361.js";const r={},t=c('<h2 id="站点下桩插座的故障情况" tabindex="-1"><a class="header-anchor" href="#站点下桩插座的故障情况" aria-hidden="true">#</a> 站点下桩插座的故障情况</h2><h3 id="现象" tabindex="-1"><a class="header-anchor" href="#现象" aria-hidden="true">#</a> 现象</h3><p>用户端扫码时显示桩插座故障情况调用接口<code>mcb-route://service/cm/site/getDeviceFaultSocketList</code>，根据设备号查<code>chargerlink_card_manager.t_socket_repair_remind</code>表，有记录就是故障，没有校验设备的站点。</p><p>商户管理获取站点下桩插座故障情况：<code>mcb-route://api/box/getPagedBoxListOfSite</code></p><p>对同一个设备的返回值不同。</p><h3 id="接口流程" tabindex="-1"><a class="header-anchor" href="#接口流程" aria-hidden="true">#</a> 接口流程</h3><ul><li>用户端扫码时显示桩插座故障情况调用接口<code>mcb-route://service/cm/site/getDeviceFaultSocketList</code>，根据设备号查<code>chargerlink_card_manager.t_socket_repair_remind</code>表，有记录就是故障，没有校验设备的站点。</li><li>商户管理获取站点下桩插座故障情况，调用接口：<code>mcb-route://api/box/getPagedBoxListOfSite</code>。 <ol><li>分页获取桩简单信息列表：<code>device.mamcharge.com://dbs/api/site/getPagedSiteSimpleList_V2</code></li><li><code>DbsBoxSimpleInfo#toBoxListVo</code>转化、归总桩插座信息</li><li>根据站点id从<code>chargerlink_card_manager.t_socket_repair_remind</code>表获取站点下桩故障信息，同步修改上一步归总的桩插座故障数量</li></ol></li></ul><p>从上面流程中可以看到用户端获取插座异常数量是通过设备id查的，商户端是通过站点id查站点下设备中插座异常数量。如果故障表中存的设备和站点对应关系不对就会有错误。</p><h3 id="数据来源" tabindex="-1"><a class="header-anchor" href="#数据来源" aria-hidden="true">#</a> 数据来源</h3><p>自动同步插座故障</p><ul><li><p>接口：<code>mcb-route://api/socket/repair/remind/syncSocket</code></p></li><li><p>从数据中心获取数据并保存到<code>chargerlink_card_manager.t_socket_repair_remind</code>表，<code>http://172.16.18.201:9002/api/charger/getPlugFailureDetail</code></p></li></ul>',11),d=[t];function o(l,n){return i(),a("div",null,d)}const _=e(r,[["render",o],["__file","业务梳理.html.vue"]]);export{_ as default};
