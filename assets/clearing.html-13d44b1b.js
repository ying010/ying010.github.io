import{_ as e,L as i,n as a,p as c,Q as l,s as k,M as o,a0 as s}from"./framework-76e35361.js";const b={},d=s('<ul class="task-list-container"><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> html details 标签</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> typora markText</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> git</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> windows tree命令生成文件树</label></p></li><li><p>[ ]</p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 事务</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> mysql引擎</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> Spring Cloud集群部署</label></p></li><li><p>[ ]</p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 拦截器日志记录</label></p></li></ul><ol><li>获取logger-key <ol><li>获取Header中的logger-key</li><li>生成随机的logger-key</li></ol></li><li>缓存logger-key</li><li>log中打印logger-key</li></ol>',2),m={class:"task-list-container"},p=l("li",{class:"task-list-item"},[l("p",null,[l("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-8",disabled:"disabled"}),l("label",{class:"task-list-item-label",for:"task-item-8"}," redis 雪崩、击穿、穿透")])],-1),n={class:"task-list-item"},r=l("p",null,[l("input",{type:"checkbox",class:"task-list-item-checkbox",id:"task-item-9",disabled:"disabled"}),l("label",{class:"task-list-item-label",for:"task-item-9"}," 分布式事务")],-1),h={href:"https://xiaomi-info.github.io/2020/01/02/distributed-transaction/",target:"_blank",rel:"noopener noreferrer"},x=s('<li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> 熔断降级</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-11" disabled="disabled"><label class="task-list-item-label" for="task-item-11"> 接口幂等</label></p><ul><li>幂等指的是其任意多次执行所产生的影响均与一次执行的影响相同</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-12" disabled="disabled"><label class="task-list-item-label" for="task-item-12"> 同接口的多个实现</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-13" disabled="disabled"><label class="task-list-item-label" for="task-item-13"> service的线程安全</label></p><ul><li>在@Controller/@Service等容器中，默认情况下，scope值是单例-singleton的，也是线程不安全的。</li><li>尽量不要在@Controller/@Service等容器中定义静态变量，不论是单例(singleton)还是多实例(prototype)他都是线程不安全的。</li><li>默认注入的Bean对象，在不设置scope的时候他也是线程不安全的。</li><li>一定要定义变量的话，用ThreadLocal来封装，这个是线程安全的</li></ul></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-14" disabled="disabled"><label class="task-list-item-label" for="task-item-14"> 服务间传递token</label></p></li><li class="task-list-item"><p><input type="checkbox" class="task-list-item-checkbox" id="task-item-15" disabled="disabled"><label class="task-list-item-label" for="task-item-15"> 亿级数据同时update千条，优化</label></p></li>',6);function u(_,f){const t=i("ExternalLinkIcon");return a(),c("div",null,[d,l("ul",m,[p,l("li",n,[r,l("ul",null,[l("li",null,[l("a",h,[k("讲解"),o(t)])])])]),x])])}const g=e(b,[["render",u],["__file","clearing.html.vue"]]);export{g as default};
