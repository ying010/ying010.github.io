import{_ as t,L as r,n as o,p as i,Q as a,s as e,M as s,a0 as l}from"./framework-76e35361.js";const c={},h=a("h1",{id:"最佳实践",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#最佳实践","aria-hidden":"true"},"#"),e(" 最佳实践")],-1),p=a("h2",{id:"优秀案例",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#优秀案例","aria-hidden":"true"},"#"),e(" 优秀案例")],-1),d={href:"https://github.com/alibaba/arthas/issues",target:"_blank",rel:"noopener noreferrer"},u=a("h3",{id:"arthas的一些特殊用法文档说明",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#arthas的一些特殊用法文档说明","aria-hidden":"true"},"#"),e(" Arthas的一些特殊用法文档说明")],-1),_={href:"https://github.com/alibaba/arthas/issues/71",target:"_blank",rel:"noopener noreferrer"},g=a("p",null,"里面列出了OGNL和Advice的一些用法，可以参考写更符合诉求的表达式",-1),b=a("h3",{id:"获取spring-context",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#获取spring-context","aria-hidden":"true"},"#"),e(" 获取Spring Context")],-1),m={href:"https://github.com/alibaba/arthas/issues/482",target:"_blank",rel:"noopener noreferrer"},v=a("p",null,"使用tt命令获取到Spring上下文，并以此获取到Spring中的Bean，然后就可以随意调用Bean中的方法了。",-1),k=a("h3",{id:"trace-命令将接口性能优化",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#trace-命令将接口性能优化","aria-hidden":"true"},"#"),e(" Trace 命令将接口性能优化")],-1),f={href:"https://github.com/alibaba/arthas/issues/1892",target:"_blank",rel:"noopener noreferrer"},x=a("p",null,"这个从实际项目出发，利用SkyWalking察觉到可优化的调用链，用trace命令查询各级调用耗时并进行了优化。是个实际的优化案例，可以学习优化思路。",-1),E=a("h3",{id:"工商银行打造在线诊断平台的探索与实践",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#工商银行打造在线诊断平台的探索与实践","aria-hidden":"true"},"#"),e(" 工商银行打造在线诊断平台的探索与实践")],-1),A={href:"https://github.com/lyghzh/pub/blob/main/doc/%E5%B7%A5%E5%95%86%E9%93%B6%E8%A1%8C%E6%89%93%E9%80%A0%E5%9C%A8%E7%BA%BF%E8%AF%8A%E6%96%AD%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%8E%A2%E7%B4%A2%E4%B8%8E%E5%AE%9E%E8%B7%B5.md",target:"_blank",rel:"noopener noreferrer"},B=a("p",null,"这个是工商银行打造的在线诊断平台的文档，将arthas页面化，通过页面的方式操作，保证了安全性和易用性，可以同时监控多个项目。对于想打造一个监控平台来说这是个非常好的案例。",-1),y=a("h2",{id:"项目应用",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#项目应用","aria-hidden":"true"},"#"),e(" 项目应用")],-1),S=a("p",null,"在实际项目应用过程中，由于项目多是docker启动，无法直接使用命令行操作。推荐使用Arthas Tunnel远程连接。",-1),I=a("h3",{id:"部署arthas-tunnel-server",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#部署arthas-tunnel-server","aria-hidden":"true"},"#"),e(" 部署Arthas Tunnel Server")],-1),w={href:"https://arthas.aliyun.com/download/arthas-tunnel-server/latest_version?mirror=aliyun",target:"_blank",rel:"noopener noreferrer"},T=a("img",{src:"https://img.shields.io/maven-central/v/com.taobao.arthas/arthas-packaging.svg?style=flat-square",alt:"Arthas"},null,-1),G=a("li",null,"从 Github Releases 页下载： https://github.com/alibaba/arthas/releases",-1),j=l(`<p>启动命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-jar</span>  arthas-tunnel-server.jar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>默认情况下，arthas tunnel server 的 web 端口是<code>8080</code>，arthas agent 连接的端口是<code>7777</code>。</p><h3 id="arthas-spring-boot-starter" tabindex="-1"><a class="header-anchor" href="#arthas-spring-boot-starter" aria-hidden="true">#</a> Arthas Spring Boot Starter</h3><h4 id="配置-maven-依赖" tabindex="-1"><a class="header-anchor" href="#配置-maven-依赖" aria-hidden="true">#</a> 配置 maven 依赖</h4><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.taobao.arthas<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>arthas-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${arthas.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用启动后，spring 会启动 arthas，并且 attach 自身进程。</p><h4 id="配置属性" tabindex="-1"><a class="header-anchor" href="#配置属性" aria-hidden="true">#</a> 配置属性</h4><p>比如，通过配置 tunnel server 实现远程管理：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>arthas.agent-id=hsehdfsfghhwertyfad
arthas.tunnel-server=ws://Arthas Tunnel Server IP:7777/ws
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>agent-id：标识本项目arthas，与arthas tunnel上的其他ID不能重复</p><p>tunnel-server：arthas tunnel服务地址，是上面部署的Arthas Tunnel Server，端口默认7777。</p>`,12),C={href:"https://github.com/alibaba/arthas/blob/master/arthas-spring-boot-starter/src/main/java/com/alibaba/arthas/spring/ArthasProperties.java",target:"_blank",rel:"noopener noreferrer"},N=a("p",null,"提示",-1),H=a("p",null,[e("默认情况下，arthas-spring-boot-starter 会禁掉"),a("code",null,"stop"),e("命令。")],-1),L={href:"https://arthas.aliyun.com/doc/arthas-properties.html",target:"_blank",rel:"noopener noreferrer"},V=a("h3",{id:"web操作",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#web操作","aria-hidden":"true"},"#"),e(" Web操作")],-1),F=a("p",null,"配置好之后在网页打开Arthas Tunnel Server，打开页面如下：",-1),P=a("p",null,[a("img",{src:"https://raw.githubusercontent.com/ying010/pic-repo/master/img/2023/02/16/20230216-165207.png",alt:"image-20230216165206132"})],-1),D=a("p",null,"输入项目中配置的agentId并点击Connect即可连接到项目。",-1),M=a("p",null,"连接后可以正常操作：",-1),W=a("p",null,[a("img",{src:"https://raw.githubusercontent.com/ying010/pic-repo/master/img/2023/02/16/20230216-165443.png",alt:"image-20230216165442745"})],-1);function q(z,O){const n=r("ExternalLinkIcon");return o(),i("div",null,[h,p,a("p",null,[e("大多数是"),a("a",d,[e("Issues"),s(n)]),e("上的优秀案例，这上面有非常多优秀的使用经验和探索，下面摘抄几个看过的案例：")]),u,a("p",null,[a("a",_,[e("GitHub"),s(n)])]),g,b,a("p",null,[a("a",m,[e("GitHub"),s(n)])]),v,k,a("p",null,[a("a",f,[e("GitHub"),s(n)])]),x,E,a("p",null,[a("a",A,[e("GitHub"),s(n)])]),B,y,S,I,a("ul",null,[a("li",null,[e("从 Maven 仓库下载："),a("a",w,[T,s(n)])]),G]),j,a("p",null,[e("全部支持的配置项："),a("a",C,[e("参考"),s(n)])]),N,H,a("p",null,[e("参考："),a("a",L,[e("Arthas Properties"),s(n)])]),V,F,P,D,M,W])}const R=t(c,[["render",q],["__file","最佳实践.html.vue"]]);export{R as default};
